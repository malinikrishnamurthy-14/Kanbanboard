{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/malinikrishnamurthy/Desktop/react-examples/react-sample-1/disco/src/App.js\";\nimport React from 'react';\nimport css from './App.css'; //HTML Drag and Drop API\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      alltasks: {\n        \"todo\": [{\n          id: 1,\n          title: \"Buy Milk\",\n          description: \"order online on big basket\"\n        }, {\n          id: 5,\n          title: \"cat\",\n          description: \"feed the cat\"\n        }],\n        \"inprocess\": [{\n          id: 2,\n          title: \"book\",\n          description: \"return library book\"\n        }],\n        \"blocked\": [{\n          id: 3,\n          title: \"exercise\",\n          description: \"do yoga and go on a walk\"\n        }],\n        \"completed\": [{\n          id: 4,\n          title: \"water\",\n          description: \"drink 4l water everyday\"\n        }]\n      }\n    };\n\n    this.onDragStart = (event, taskid, taskstatus) => {\n      event.dataTransfer.setData(\"taskid\", taskid);\n      event.dataTransfer.setData(\"taskstatus\", taskstatus);\n    };\n\n    this.onDrop = (event, targetstatus) => {\n      const taskid = event.dataTransfer.getData(\"taskid\");\n      const taskstatus = event.dataTransfer.getData(\"taskstatus\");\n      let tasks = this.state.tasks.filter(task => {\n        if (task.id == taskid) {\n          return task;\n        }\n      });\n      event.preventDefault();\n    };\n\n    this.onDragOver = event => {\n      event.preventDefault();\n    };\n  }\n\n  render() {\n    const alltasks = {\n      todo: [],\n      inprocess: [],\n      blocked: [],\n      completed: []\n    }; //set draggale to true\n    //implement onDragStart\n\n    let aKeys = Object.keys(this.state.tasks);\n\n    for (const key in aKeys) {\n      const tasksq = this.state.tasks[aKeys[key]];\n      tasks.forEach(task => {\n        tasks[task.status].push( /*#__PURE__*/_jsxDEV(\"div\", {\n          id: task.id,\n          className: \"task\",\n          draggable: true,\n          onDragStart: event => this.onDragStart(event, task.id, task.status),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            draggable: \"false\",\n            className: \"title\",\n            children: task.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            draggable: \"false\",\n            className: \"description\",\n            children: task.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 33\n        }, this));\n      });\n    } // this.state.tasks[task.status].forEach(task => {\n    //   tasks[task.status].push(<div id={task.id} className=\"task\" draggable onDragStart={(event) => this.onDragStart(event, task.id, task.status)}>\n    //     <div draggable=\"false\" className=\"title\">{task.title}</div>\n    //     <div draggable=\"false\" className=\"description\">{task.description}</div>\n    //   </div>)\n    // })\n\n\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"top-header\",\n        children: \"Kanban Board\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"kanban-board\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"kanban\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \" + To Do\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            onDrop: event => this.onDrop(event, \"todo\"),\n            onDragOver: event => this.onDragOver(event),\n            children: [\" \", tasks.todo]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"kanban\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \" + In Process\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            onDrop: event => this.onDrop(event, \"inprocess\"),\n            onDragOver: event => this.onDragOver(event),\n            children: tasks.inprocess\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"kanban\",\n          onDrop: event => this.onDrop(event, \"blocked\"),\n          onDragOver: event => this.onDragOver(event),\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \" + Blocked\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            onDrop: event => this.onDrop(event, \"blocked\"),\n            onDragOver: event => this.onDragOver(event),\n            children: tasks.blocked\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"kanban\",\n          onDrop: event => this.onDrop(event, \"completed\"),\n          onDragOver: event => this.onDragOver(event),\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \" + Completed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            onDrop: event => this.onDrop(event, \"completed\"),\n            onDragOver: event => this.onDragOver(event),\n            children: tasks.completed\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/malinikrishnamurthy/Desktop/react-examples/react-sample-1/disco/src/App.js"],"names":["React","css","App","Component","state","alltasks","id","title","description","onDragStart","event","taskid","taskstatus","dataTransfer","setData","onDrop","targetstatus","getData","tasks","filter","task","preventDefault","onDragOver","render","todo","inprocess","blocked","completed","aKeys","Object","keys","key","tasksq","forEach","status","push"],"mappings":"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","sourcesContent":["import React from 'react';\nimport css from './App.css';\n\n//HTML Drag and Drop API\n\nclass App extends React.Component {\n  state = {\n    alltasks: {\n      \"todo\": [{\n        id: 1,\n        title: \"Buy Milk\",\n        description: \"order online on big basket\"\n      },{\n        id: 5,\n        title: \"cat\",\n        description: \"feed the cat\"\n      }],\n      \"inprocess\": [{\n        id: 2,\n        title: \"book\",\n        description: \"return library book\"\n      }],\n      \"blocked\": [{\n        id: 3,\n        title: \"exercise\",\n        description: \"do yoga and go on a walk\"\n      }],\n      \"completed\": [{\n        id: 4,\n        title: \"water\",\n        description: \"drink 4l water everyday\"\n      }]\n    }\n  };\n  \n  //1. first event on drag\n  onDragStart = (event, taskid, taskstatus) => {\n    event.dataTransfer.setData(\"taskid\", taskid);\n    event.dataTransfer.setData(\"taskstatus\", taskstatus);\n  }\n\n  onDrop = (event, targetstatus) => {\n    const taskid = event.dataTransfer.getData(\"taskid\");\n    const taskstatus = event.dataTransfer.getData(\"taskstatus\");\n\n    let tasks = this.state.tasks.filter((task) => {\n      if (task.id == taskid) {\n        return task;\n      }\n    });\n\n    event.preventDefault()\n\n  }\n\n  onDragOver = (event) => {\n    event.preventDefault();\n  }\n\n  render() {\n    const alltasks = {\n      todo: [],\n      inprocess: [],\n      blocked: [],\n      completed: []\n    };\n\n    //set draggale to true\n    //implement onDragStart\n\n    let aKeys = Object.keys(this.state.tasks);\n\n    for (const key in aKeys) {\n      const tasksq = this.state.tasks[aKeys[key]];\n      tasks.forEach(task => {\n        tasks[task.status].push(<div id={task.id} className=\"task\" draggable onDragStart={(event) => this.onDragStart(event, task.id, task.status)}>\n          <div draggable=\"false\" className=\"title\">{task.title}</div>\n          <div draggable=\"false\" className=\"description\">{task.description}</div>\n        </div>)\n      })\n    }\n    // this.state.tasks[task.status].forEach(task => {\n    //   tasks[task.status].push(<div id={task.id} className=\"task\" draggable onDragStart={(event) => this.onDragStart(event, task.id, task.status)}>\n    //     <div draggable=\"false\" className=\"title\">{task.title}</div>\n    //     <div draggable=\"false\" className=\"description\">{task.description}</div>\n    //   </div>)\n    // })\n\n    return (\n      <React.Fragment>\n        <h1 className=\"top-header\">Kanban Board</h1>\n        <div class=\"kanban-board\">\n          <div class=\"kanban\">\n            <h2> + To Do</h2>\n            <div onDrop={(event) => this.onDrop(event, \"todo\")} onDragOver={(event) => this.onDragOver(event)}> {tasks.todo}</div>\n          </div>\n          <div class=\"kanban\">\n            <h2> + In Process</h2>\n            <div onDrop={(event) => this.onDrop(event, \"inprocess\")} onDragOver={(event) => this.onDragOver(event)}>{tasks.inprocess}</div>\n          </div>\n          <div class=\"kanban\" onDrop={(event) => this.onDrop(event, \"blocked\")} onDragOver={(event) => this.onDragOver(event)}>\n            <h2> + Blocked</h2>\n            <div onDrop={(event) => this.onDrop(event, \"blocked\")} onDragOver={(event) => this.onDragOver(event)}>{tasks.blocked}</div>\n          </div>\n          <div class=\"kanban\" onDrop={(event) => this.onDrop(event, \"completed\")} onDragOver={(event) => this.onDragOver(event)}>\n            <h2> + Completed</h2>\n            <div onDrop={(event) => this.onDrop(event, \"completed\")} onDragOver={(event) => this.onDragOver(event)}>{tasks.completed}</div>\n          </div>\n        </div>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}