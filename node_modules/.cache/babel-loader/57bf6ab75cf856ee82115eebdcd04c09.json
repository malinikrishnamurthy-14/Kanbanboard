{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/malinikrishnamurthy/Desktop/react-examples/react-sample-1/disco/src/App.js\";\nimport React from 'react';\nimport './App.css'; //HTML Drag and Drop API\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tasks: [{\n        id: \"1\",\n        taskName: \"Read book\",\n        type: \"inProgress\",\n        backgroundColor: \"red\"\n      }, {\n        id: \"2\",\n        taskName: \"Pay bills\",\n        type: \"inProgress\",\n        backgroundColor: \"green\"\n      }, {\n        id: \"3\",\n        taskName: \"Go to the gym\",\n        type: \"Done\",\n        backgroundColor: \"blue\"\n      }, {\n        id: \"4\",\n        taskName: \"Play baseball\",\n        type: \"Done\",\n        backgroundColor: \"green\"\n      }]\n    };\n\n    this.onDragStart = (event, taskid, taskstatus) => {\n      event.dataTransfer.setData(\"taskid\", taskid);\n      event.dataTransfer.setData(\"taskstatus\", taskstatus);\n    };\n\n    this.onDrop = (event, targetstatus) => {\n      const taskid = event.dataTransfer.getData(\"taskid\");\n      const taskstatus = event.dataTransfer.getData(\"taskstatus\");\n      const draggedtask = this.state.alltasks[taskstatus].filter(task => {\n        if (task.id == taskid) {\n          return task;\n        }\n      });\n      let aKeys = Object.keys(this.state.alltasks);\n      let tasks = {};\n\n      for (const key in aKeys) {\n        if (aKeys[key] == targetstatus) {\n          tasks[aKeys[key]] = draggedtask[0];\n        }\n\n        if (aKeys[key] == taskstatus) {\n          this.state.alltasks[aKeys[key]].forEach(task => {\n            if (task.id !== taskid) {\n              tasks[aKeys[key]] = task;\n            }\n          });\n        }\n      }\n\n      this.setState({ ...this.state,\n        tasks\n      });\n      event.preventDefault();\n    };\n\n    this.onDragOver = event => {\n      event.preventDefault();\n    };\n  }\n\n  render() {\n    const alltasks = {\n      todo: [],\n      inprocess: [],\n      blocked: [],\n      completed: []\n    };\n    let aKeys = Object.keys(this.state.alltasks);\n\n    for (const key in aKeys) {\n      const indtasks = this.state.alltasks[aKeys[key]];\n      indtasks.forEach(task => {\n        const taskstatus = aKeys[key];\n        alltasks[taskstatus].push( /*#__PURE__*/_jsxDEV(\"div\", {\n          id: task.id,\n          className: \"task\",\n          draggable: true,\n          onDragStart: event => this.onDragStart(event, task.id, taskstatus),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            draggable: \"false\",\n            className: \"title\",\n            children: task.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            draggable: \"false\",\n            className: \"description\",\n            children: task.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 35\n        }, this));\n      });\n    }\n\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"top-header\",\n        children: \"Kanban Board\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"kanban-board\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"kanban\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \" + To Do\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            onDrop: event => this.onDrop(event, \"todo\"),\n            onDragOver: event => this.onDragOver(event),\n            children: [\" \", alltasks.todo]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"kanban\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \" + In Process\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            onDrop: event => this.onDrop(event, \"inprocess\"),\n            onDragOver: event => this.onDragOver(event),\n            children: alltasks.inprocess\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"kanban\",\n          onDrop: event => this.onDrop(event, \"blocked\"),\n          onDragOver: event => this.onDragOver(event),\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \" + Blocked\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            onDrop: event => this.onDrop(event, \"blocked\"),\n            onDragOver: event => this.onDragOver(event),\n            children: alltasks.blocked\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"kanban\",\n          onDrop: event => this.onDrop(event, \"completed\"),\n          onDragOver: event => this.onDragOver(event),\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \" + Completed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            onDrop: event => this.onDrop(event, \"completed\"),\n            onDragOver: event => this.onDragOver(event),\n            children: alltasks.completed\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/malinikrishnamurthy/Desktop/react-examples/react-sample-1/disco/src/App.js"],"names":["React","App","Component","state","tasks","id","taskName","type","backgroundColor","onDragStart","event","taskid","taskstatus","dataTransfer","setData","onDrop","targetstatus","getData","draggedtask","alltasks","filter","task","aKeys","Object","keys","key","forEach","setState","preventDefault","onDragOver","render","todo","inprocess","blocked","completed","indtasks","push","title","description"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\n\n//HTML Drag and Drop API\n\nclass App extends React.Component {\n  // state = {\n  //   alltasks: {\n  //     \"todo\": [{\n  //       id: 1,\n  //       title: \"Buy Milk\",\n  //       description: \"order online on big basket\"\n  //     },{\n  //       id: 5,\n  //       title: \"cat\",\n  //       description: \"feed the cat\"\n  //     }],\n  //     \"inprocess\": [{\n  //       id: 2,\n  //       title: \"book\",\n  //       description: \"return library book\"\n  //     }],\n  //     \"blocked\": [{\n  //       id: 3,\n  //       title: \"exercise\",\n  //       description: \"do yoga and go on a walk\"\n  //     }],\n  //     \"completed\": [{\n  //       id: 4,\n  //       title: \"water\",\n  //       description: \"drink 4l water everyday\"\n  //     }]\n  //   }\n  // };\n\n  state = {\n    tasks: [\n        {id: \"1\", taskName:\"Read book\",type:\"inProgress\", backgroundColor: \"red\"},\n        {id: \"2\", taskName:\"Pay bills\", type:\"inProgress\", backgroundColor:\"green\"},\n        {id: \"3\", taskName:\"Go to the gym\", type:\"Done\", backgroundColor:\"blue\"},\n        {id: \"4\", taskName:\"Play baseball\", type:\"Done\", backgroundColor:\"green\"}\n    ]\n  };\n  \n  //first event on drag\n  onDragStart = (event, taskid, taskstatus) => {\n    event.dataTransfer.setData(\"taskid\", taskid);\n    event.dataTransfer.setData(\"taskstatus\", taskstatus);\n  }\n\n  onDrop = (event, targetstatus) => {\n    const taskid = event.dataTransfer.getData(\"taskid\");\n    const taskstatus = event.dataTransfer.getData(\"taskstatus\");\n\n   const draggedtask = this.state.alltasks[taskstatus].filter((task) => {\n      if (task.id == taskid) {\n        return task;\n      }\n    });\n\n    let aKeys = Object.keys(this.state.alltasks);\n    let tasks = {};\n    for (const key in aKeys) {\n      \n      if(aKeys[key] == targetstatus){\n        tasks[aKeys[key]] = draggedtask[0];\n      }\n      if(aKeys[key] == taskstatus){\n        this.state.alltasks[aKeys[key]].forEach(task => {\n            if(task.id !== taskid){\n              tasks[aKeys[key]] = task;\n            }\n        });\n      }\n    }\n   \n    this.setState({...this.state, tasks});\n\n    event.preventDefault()\n  }\n\n  onDragOver = (event) => {\n    event.preventDefault();\n  }\n\n  render() {\n    const alltasks = {\n      todo: [],\n      inprocess: [],\n      blocked: [],\n      completed: []\n    };\n\n    let aKeys = Object.keys(this.state.alltasks);\n    for (const key in aKeys) {\n      const indtasks = this.state.alltasks[aKeys[key]];\n      indtasks.forEach(task => {\n        const taskstatus = aKeys[key];\n        alltasks[taskstatus].push(<div id={task.id} className=\"task\" draggable onDragStart={(event) => this.onDragStart(event, task.id, taskstatus)}>\n          <div draggable=\"false\" className=\"title\">{task.title}</div>\n          <div draggable=\"false\" className=\"description\">{task.description}</div>\n        </div>)\n      })\n    }\n\n    return (\n      <React.Fragment>\n        <h1 className=\"top-header\">Kanban Board</h1>\n        <div class=\"kanban-board\">\n          <div class=\"kanban\">\n            <h2> + To Do</h2>\n            <div onDrop={(event) => this.onDrop(event, \"todo\")} onDragOver={(event) => this.onDragOver(event)}> {alltasks.todo}</div>\n          </div>\n          <div class=\"kanban\">\n            <h2> + In Process</h2>\n            <div onDrop={(event) => this.onDrop(event, \"inprocess\")} onDragOver={(event) => this.onDragOver(event)}>{alltasks.inprocess}</div>\n          </div>\n          <div class=\"kanban\" onDrop={(event) => this.onDrop(event, \"blocked\")} onDragOver={(event) => this.onDragOver(event)}>\n            <h2> + Blocked</h2>\n            <div onDrop={(event) => this.onDrop(event, \"blocked\")} onDragOver={(event) => this.onDragOver(event)}>{alltasks.blocked}</div>\n          </div>\n          <div class=\"kanban\" onDrop={(event) => this.onDrop(event, \"completed\")} onDragOver={(event) => this.onDragOver(event)}>\n            <h2> + Completed</h2>\n            <div onDrop={(event) => this.onDrop(event, \"completed\")} onDragOver={(event) => this.onDragOver(event)}>{alltasks.completed}</div>\n          </div>\n        </div>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}