{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/malinikrishnamurthy/Desktop/react-examples/react-sample-1/disco/src/App.js\";\nimport React from 'react';\nimport './App.css'; //HTML Drag and Drop API\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tasks: [{\n        id: \"1\",\n        taskName: \"Read book\",\n        type: \"inProgress\",\n        backgroundColor: \"red\"\n      }, {\n        id: \"2\",\n        taskName: \"Pay bills\",\n        type: \"inProgress\",\n        backgroundColor: \"green\"\n      }, {\n        id: \"3\",\n        taskName: \"Go to the gym\",\n        type: \"Done\",\n        backgroundColor: \"blue\"\n      }, {\n        id: \"4\",\n        taskName: \"Play baseball\",\n        type: \"Done\",\n        backgroundColor: \"green\"\n      }]\n    };\n  }\n\n  render() {\n    var tasks = {\n      inProgress: [],\n      Done: []\n    };\n    this.state.tasks.forEach(task => {\n      tasks[task.type].push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"draggable\",\n        style: {\n          backgroundColor: task.bgcolor\n        },\n        children: task.taskName\n      }, task.taskName, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this));\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"drag-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"head\",\n        children: \"To Do List Drag & Drop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inProgress\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"group-header\",\n          children: \"In Progress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 12\n        }, this), tasks.inProgress]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"droppable\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"group-header\",\n          children: \"Done\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 12\n        }, this), tasks.Done]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 8\n    }, this);\n  } // //first event on drag\n  // onDragStart = (event, taskid, taskstatus) => {\n  //   event.dataTransfer.setData(\"taskid\", taskid);\n  //   event.dataTransfer.setData(\"taskstatus\", taskstatus);\n  // }\n  // onDrop = (event, targetstatus) => {\n  //   const taskid = event.dataTransfer.getData(\"taskid\");\n  //   const taskstatus = event.dataTransfer.getData(\"taskstatus\");\n  //  const draggedtask = this.state.alltasks[taskstatus].filter((task) => {\n  //     if (task.id == taskid) {\n  //       return task;\n  //     }\n  //   });\n  //   let aKeys = Object.keys(this.state.alltasks);\n  //   let tasks = {};\n  //   for (const key in aKeys) {\n  //     if(aKeys[key] == targetstatus){\n  //       tasks[aKeys[key]] = draggedtask[0];\n  //     }\n  //     if(aKeys[key] == taskstatus){\n  //       this.state.alltasks[aKeys[key]].forEach(task => {\n  //           if(task.id !== taskid){\n  //             tasks[aKeys[key]] = task;\n  //           }\n  //       });\n  //     }\n  //   }\n  //   this.setState({...this.state, tasks});\n  //   event.preventDefault()\n  // }\n  // onDragOver = (event) => {\n  //   event.preventDefault();\n  // }\n  // render() {\n  //   const alltasks = {\n  //     todo: [],\n  //     inprocess: [],\n  //     blocked: [],\n  //     completed: []\n  //   };\n  //   let aKeys = Object.keys(this.state.alltasks);\n  //   for (const key in aKeys) {\n  //     const indtasks = this.state.alltasks[aKeys[key]];\n  //     indtasks.forEach(task => {\n  //       const taskstatus = aKeys[key];\n  //       alltasks[taskstatus].push(<div id={task.id} className=\"task\" draggable onDragStart={(event) => this.onDragStart(event, task.id, taskstatus)}>\n  //         <div draggable=\"false\" className=\"title\">{task.title}</div>\n  //         <div draggable=\"false\" className=\"description\">{task.description}</div>\n  //       </div>)\n  //     })\n  //   }\n  //   return (\n  //     <React.Fragment>\n  //       <h1 className=\"top-header\">Kanban Board</h1>\n  //       <div class=\"kanban-board\">\n  //         <div class=\"kanban\">\n  //           <h2> + To Do</h2>\n  //           <div onDrop={(event) => this.onDrop(event, \"todo\")} onDragOver={(event) => this.onDragOver(event)}> {alltasks.todo}</div>\n  //         </div>\n  //         <div class=\"kanban\">\n  //           <h2> + In Process</h2>\n  //           <div onDrop={(event) => this.onDrop(event, \"inprocess\")} onDragOver={(event) => this.onDragOver(event)}>{alltasks.inprocess}</div>\n  //         </div>\n  //         <div class=\"kanban\" onDrop={(event) => this.onDrop(event, \"blocked\")} onDragOver={(event) => this.onDragOver(event)}>\n  //           <h2> + Blocked</h2>\n  //           <div onDrop={(event) => this.onDrop(event, \"blocked\")} onDragOver={(event) => this.onDragOver(event)}>{alltasks.blocked}</div>\n  //         </div>\n  //         <div class=\"kanban\" onDrop={(event) => this.onDrop(event, \"completed\")} onDragOver={(event) => this.onDragOver(event)}>\n  //           <h2> + Completed</h2>\n  //           <div onDrop={(event) => this.onDrop(event, \"completed\")} onDragOver={(event) => this.onDragOver(event)}>{alltasks.completed}</div>\n  //         </div>\n  //       </div>\n  //     </React.Fragment>\n  //   )\n  // }\n\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/malinikrishnamurthy/Desktop/react-examples/react-sample-1/disco/src/App.js"],"names":["React","App","Component","state","tasks","id","taskName","type","backgroundColor","render","inProgress","Done","forEach","task","push","bgcolor"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP,C,CAEA;;AAEA,MAAMC,GAAN,SAAkBD,KAAK,CAACE,SAAxB,CAAkC;AAAA;AAAA;AAAA,SA8BhCC,KA9BgC,GA8BxB;AACNC,MAAAA,KAAK,EAAE,CACH;AAACC,QAAAA,EAAE,EAAE,GAAL;AAAUC,QAAAA,QAAQ,EAAC,WAAnB;AAA+BC,QAAAA,IAAI,EAAC,YAApC;AAAkDC,QAAAA,eAAe,EAAE;AAAnE,OADG,EAEH;AAACH,QAAAA,EAAE,EAAE,GAAL;AAAUC,QAAAA,QAAQ,EAAC,WAAnB;AAAgCC,QAAAA,IAAI,EAAC,YAArC;AAAmDC,QAAAA,eAAe,EAAC;AAAnE,OAFG,EAGH;AAACH,QAAAA,EAAE,EAAE,GAAL;AAAUC,QAAAA,QAAQ,EAAC,eAAnB;AAAoCC,QAAAA,IAAI,EAAC,MAAzC;AAAiDC,QAAAA,eAAe,EAAC;AAAjE,OAHG,EAIH;AAACH,QAAAA,EAAE,EAAE,GAAL;AAAUC,QAAAA,QAAQ,EAAC,eAAnB;AAAoCC,QAAAA,IAAI,EAAC,MAAzC;AAAiDC,QAAAA,eAAe,EAAC;AAAjE,OAJG;AADD,KA9BwB;AAAA;;AAuChCC,EAAAA,MAAM,GAAG;AACT,QAAIL,KAAK,GAAG;AACPM,MAAAA,UAAU,EAAE,EADL;AAEPC,MAAAA,IAAI,EAAE;AAFC,KAAZ;AAKA,SAAKR,KAAL,CAAWC,KAAX,CAAiBQ,OAAjB,CAA2BC,IAAD,IAAU;AAClCT,MAAAA,KAAK,CAACS,IAAI,CAACN,IAAN,CAAL,CAAiBO,IAAjB,eACE;AACE,QAAA,SAAS,EAAC,WADZ;AAEE,QAAA,KAAK,EAAI;AAACN,UAAAA,eAAe,EAAEK,IAAI,CAACE;AAAvB,SAFX;AAAA,kBAGGF,IAAI,CAACP;AAHR,SAAUO,IAAI,CAACP,QAAf;AAAA;AAAA;AAAA;AAAA,cADF;AAOD,KARD;AAUG,wBACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAED;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACK;AAAM,UAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADL,EAEMF,KAAK,CAACM,UAFZ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFC,eAME;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE;AAAM,UAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEGN,KAAK,CAACO,IAFT;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAaD,GApE8B,CAsEhC;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AA1JgC;;AA6JlC,eAAeV,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\n\n//HTML Drag and Drop API\n\nclass App extends React.Component {\n  // state = {\n  //   alltasks: {\n  //     \"todo\": [{\n  //       id: 1,\n  //       title: \"Buy Milk\",\n  //       description: \"order online on big basket\"\n  //     },{\n  //       id: 5,\n  //       title: \"cat\",\n  //       description: \"feed the cat\"\n  //     }],\n  //     \"inprocess\": [{\n  //       id: 2,\n  //       title: \"book\",\n  //       description: \"return library book\"\n  //     }],\n  //     \"blocked\": [{\n  //       id: 3,\n  //       title: \"exercise\",\n  //       description: \"do yoga and go on a walk\"\n  //     }],\n  //     \"completed\": [{\n  //       id: 4,\n  //       title: \"water\",\n  //       description: \"drink 4l water everyday\"\n  //     }]\n  //   }\n  // };\n\n  state = {\n    tasks: [\n        {id: \"1\", taskName:\"Read book\",type:\"inProgress\", backgroundColor: \"red\"},\n        {id: \"2\", taskName:\"Pay bills\", type:\"inProgress\", backgroundColor:\"green\"},\n        {id: \"3\", taskName:\"Go to the gym\", type:\"Done\", backgroundColor:\"blue\"},\n        {id: \"4\", taskName:\"Play baseball\", type:\"Done\", backgroundColor:\"green\"}\n    ]\n  };\n\n  render() {\n\t\tvar tasks = {\n\t      inProgress: [],\n\t      Done: []\n\t    }\n\n\t\tthis.state.tasks.forEach ((task) => {\n\t\t  tasks[task.type].push(\n\t\t    <div key={task.taskName} \n\t\t      className=\"draggable\"\n\t\t      style = {{backgroundColor: task.bgcolor}}>\n\t\t      {task.taskName}\n\t\t    </div>\n\t\t  );\n\t\t});\n\n\t    return (\n\t      <div className=\"drag-container\">\n\t        <h2 className=\"head\">To Do List Drag & Drop</h2>\n\t\t    <div className=\"inProgress\">\n\t          <span className=\"group-header\">In Progress</span>\n\t          {tasks.inProgress}\n\t        </div>\n\t        <div className=\"droppable\">\n\t          <span className=\"group-header\">Done</span>\n\t          {tasks.Done}\n\t        </div>\t        \n\t      </div>\n\t    );\n  \t}\n  \n  // //first event on drag\n  // onDragStart = (event, taskid, taskstatus) => {\n  //   event.dataTransfer.setData(\"taskid\", taskid);\n  //   event.dataTransfer.setData(\"taskstatus\", taskstatus);\n  // }\n\n  // onDrop = (event, targetstatus) => {\n  //   const taskid = event.dataTransfer.getData(\"taskid\");\n  //   const taskstatus = event.dataTransfer.getData(\"taskstatus\");\n\n  //  const draggedtask = this.state.alltasks[taskstatus].filter((task) => {\n  //     if (task.id == taskid) {\n  //       return task;\n  //     }\n  //   });\n\n  //   let aKeys = Object.keys(this.state.alltasks);\n  //   let tasks = {};\n  //   for (const key in aKeys) {\n      \n  //     if(aKeys[key] == targetstatus){\n  //       tasks[aKeys[key]] = draggedtask[0];\n  //     }\n  //     if(aKeys[key] == taskstatus){\n  //       this.state.alltasks[aKeys[key]].forEach(task => {\n  //           if(task.id !== taskid){\n  //             tasks[aKeys[key]] = task;\n  //           }\n  //       });\n  //     }\n  //   }\n   \n  //   this.setState({...this.state, tasks});\n\n  //   event.preventDefault()\n  // }\n\n  // onDragOver = (event) => {\n  //   event.preventDefault();\n  // }\n\n  // render() {\n  //   const alltasks = {\n  //     todo: [],\n  //     inprocess: [],\n  //     blocked: [],\n  //     completed: []\n  //   };\n\n  //   let aKeys = Object.keys(this.state.alltasks);\n  //   for (const key in aKeys) {\n  //     const indtasks = this.state.alltasks[aKeys[key]];\n  //     indtasks.forEach(task => {\n  //       const taskstatus = aKeys[key];\n  //       alltasks[taskstatus].push(<div id={task.id} className=\"task\" draggable onDragStart={(event) => this.onDragStart(event, task.id, taskstatus)}>\n  //         <div draggable=\"false\" className=\"title\">{task.title}</div>\n  //         <div draggable=\"false\" className=\"description\">{task.description}</div>\n  //       </div>)\n  //     })\n  //   }\n\n  //   return (\n  //     <React.Fragment>\n  //       <h1 className=\"top-header\">Kanban Board</h1>\n  //       <div class=\"kanban-board\">\n  //         <div class=\"kanban\">\n  //           <h2> + To Do</h2>\n  //           <div onDrop={(event) => this.onDrop(event, \"todo\")} onDragOver={(event) => this.onDragOver(event)}> {alltasks.todo}</div>\n  //         </div>\n  //         <div class=\"kanban\">\n  //           <h2> + In Process</h2>\n  //           <div onDrop={(event) => this.onDrop(event, \"inprocess\")} onDragOver={(event) => this.onDragOver(event)}>{alltasks.inprocess}</div>\n  //         </div>\n  //         <div class=\"kanban\" onDrop={(event) => this.onDrop(event, \"blocked\")} onDragOver={(event) => this.onDragOver(event)}>\n  //           <h2> + Blocked</h2>\n  //           <div onDrop={(event) => this.onDrop(event, \"blocked\")} onDragOver={(event) => this.onDragOver(event)}>{alltasks.blocked}</div>\n  //         </div>\n  //         <div class=\"kanban\" onDrop={(event) => this.onDrop(event, \"completed\")} onDragOver={(event) => this.onDragOver(event)}>\n  //           <h2> + Completed</h2>\n  //           <div onDrop={(event) => this.onDrop(event, \"completed\")} onDragOver={(event) => this.onDragOver(event)}>{alltasks.completed}</div>\n  //         </div>\n  //       </div>\n  //     </React.Fragment>\n  //   )\n  // }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}