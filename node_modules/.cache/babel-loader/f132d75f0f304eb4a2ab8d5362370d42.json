{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/malinikrishnamurthy/Desktop/react-examples/react-sample-1/disco/src/App.js\";\nimport React from 'react';\nimport css from './App.css'; //HTML Drag and Drop API\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tasks: [{\n        id: 1,\n        title: \"Buy Milk\",\n        description: \"order online on big basket\",\n        status: \"todo\"\n      }, {\n        id: 2,\n        title: \"book\",\n        description: \"return library book\",\n        status: \"inprocess\"\n      }, {\n        id: 3,\n        title: \"exercise\",\n        description: \"do yoga and go on a walk\",\n        status: \"completed\"\n      }, {\n        id: 4,\n        title: \"water\",\n        description: \"drink 4l water everyday\",\n        status: \"blocked\"\n      }, {\n        id: 5,\n        title: \"cat\",\n        description: \"feed the cat\",\n        status: \"todo\"\n      }]\n    };\n\n    this.onDragStart = (event, taskid, taskstatus) => {\n      event.dataTransfer.setData(\"taskid\", taskid);\n      event.dataTransfer.setData(\"taskstatus\", taskstatus);\n    };\n\n    this.onDrop = (event, targetstatus) => {\n      const taskid = event.dataTransfer.getData(\"taskid\");\n      const taskstatus = event.dataTransfer.getData(\"taskstatus\");\n      let taskName = event.dataTransfer.getData(\"taskName\");\n      let tasks = this.state.tasks.filter(task => {\n        if (task.id == taskid) {\n          task.type = cat;\n        }\n\n        return task;\n      });\n      this.setState({ ...this.state,\n        tasks\n      });\n      this.state.tasks.forEach(task => {\n        tasks[task.status].push( /*#__PURE__*/_jsxDEV(\"div\", {\n          id: task.id,\n          className: \"task\",\n          draggable: true,\n          onDragStart: event => this.onDragStart(event, task.id, task.status),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            draggable: \"false\",\n            className: \"title\",\n            children: task.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            draggable: \"false\",\n            className: \"description\",\n            children: task.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 31\n        }, this));\n      });\n      this.state.tasks[targetstatus].push(this.state.tasks[taskstatus].filter(taskid));\n      event.preventDefault();\n    };\n\n    this.onDragOver = event => {\n      event.preventDefault();\n    };\n  }\n\n  render() {\n    var tasks = {\n      todo: [],\n      inprocess: [],\n      blocked: [],\n      completed: []\n    }; //set draggale to true\n    //implement onDragStart\n\n    this.state.tasks.forEach(task => {\n      tasks[task.status].push( /*#__PURE__*/_jsxDEV(\"div\", {\n        id: task.id,\n        className: \"task\",\n        draggable: true,\n        onDragStart: event => this.onDragStart(event, task.id, task.status),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          draggable: \"false\",\n          className: \"title\",\n          children: task.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          draggable: \"false\",\n          className: \"description\",\n          children: task.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 31\n      }, this));\n    });\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"top-header\",\n        children: \"Kanban Board\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"kanban-board\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"kanban\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \" + To Do\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            onDrop: event => this.onDrop(event, \"todo\"),\n            onDragOver: event => this.onDragOver(event),\n            children: [\" \", tasks.todo]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"kanban\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \" + In Process\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            onDrop: event => this.onDrop(event, \"inprocess\"),\n            onDragOver: event => this.onDragOver(event),\n            children: tasks.inprocess\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"kanban\",\n          onDrop: event => this.onDrop(event, \"blocked\"),\n          onDragOver: event => this.onDragOver(event),\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \" + Blocked\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            onDrop: event => this.onDrop(event, \"blocked\"),\n            onDragOver: event => this.onDragOver(event),\n            children: tasks.blocked\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"kanban\",\n          onDrop: event => this.onDrop(event, \"completed\"),\n          onDragOver: event => this.onDragOver(event),\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \" + Completed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            onDrop: event => this.onDrop(event, \"completed\"),\n            onDragOver: event => this.onDragOver(event),\n            children: tasks.completed\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/malinikrishnamurthy/Desktop/react-examples/react-sample-1/disco/src/App.js"],"names":["React","css","App","Component","state","tasks","id","title","description","status","onDragStart","event","taskid","taskstatus","dataTransfer","setData","onDrop","targetstatus","getData","taskName","filter","task","type","cat","setState","forEach","push","preventDefault","onDragOver","render","todo","inprocess","blocked","completed"],"mappings":"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","sourcesContent":["import React from 'react';\nimport css from './App.css';\n\n//HTML Drag and Drop API\n\nclass App extends React.Component {\n  state = {\n    tasks: [{\n      id: 1,\n      title: \"Buy Milk\",\n      description: \"order online on big basket\",\n      status: \"todo\"\n    }, {\n      id: 2,\n      title: \"book\",\n      description: \"return library book\",\n      status: \"inprocess\"\n    },\n    {\n      id: 3,\n      title: \"exercise\",\n      description: \"do yoga and go on a walk\",\n      status: \"completed\"\n    }, {\n      id: 4,\n      title: \"water\",\n      description: \"drink 4l water everyday\",\n      status: \"blocked\"\n    }, {\n      id: 5,\n      title: \"cat\",\n      description: \"feed the cat\",\n      status: \"todo\"\n    }]\n  };\n\n  onDragStart = (event, taskid, taskstatus) => {\n    event.dataTransfer.setData(\"taskid\", taskid);\n    event.dataTransfer.setData(\"taskstatus\", taskstatus);\n  }\n\n  onDrop = (event, targetstatus) => {\n    const taskid = event.dataTransfer.getData(\"taskid\");\n    const taskstatus = event.dataTransfer.getData(\"taskstatus\");\n\n\n    let taskName = event.dataTransfer.getData(\"taskName\");\n\n    let tasks = this.state.tasks.filter((task) => {\n        if (task.id == taskid) {\n            task.type = cat;\n        }\n        return task;\n    });\n\n\t    this.setState({\n\t        ...this.state,\n\t        tasks\n\t    });\n\n    this.state.tasks.forEach(task => {\n      tasks[task.status].push(<div id={task.id} className=\"task\" draggable onDragStart={(event) => this.onDragStart(event, task.id, task.status)}>\n          <div draggable=\"false\" className=\"title\">{task.title}</div>\n          <div draggable=\"false\" className=\"description\">{task.description}</div>\n      </div>)\n    })\n    \n    this.state.tasks[targetstatus].push(this.state.tasks[taskstatus].filter(taskid));\n    event.preventDefault()\n\n  }\n\n  onDragOver = (event) => {\n    event.preventDefault();\n  }\n\n  render() {\n    var tasks = {\n      todo: [],\n      inprocess: [],\n      blocked: [],\n      completed: []\n    };\n\n    //set draggale to true\n    //implement onDragStart\n    this.state.tasks.forEach(task => {\n      tasks[task.status].push(<div id={task.id} className=\"task\" draggable onDragStart={(event) => this.onDragStart(event, task.id, task.status)}>\n          <div draggable=\"false\" className=\"title\">{task.title}</div>\n          <div draggable=\"false\" className=\"description\">{task.description}</div>\n      </div>)\n    })\n\n    return (\n      <React.Fragment>\n        <h1 className=\"top-header\">Kanban Board</h1>\n        <div class=\"kanban-board\">\n          <div class=\"kanban\">\n            <h2> + To Do</h2>\n            <div onDrop={(event) => this.onDrop(event, \"todo\")} onDragOver={(event) => this.onDragOver(event)}> {tasks.todo}</div>\n          </div>\n          <div class=\"kanban\">\n            <h2> + In Process</h2>\n            <div onDrop={(event) => this.onDrop(event, \"inprocess\")} onDragOver={(event) => this.onDragOver(event)}>{tasks.inprocess}</div>\n          </div>\n          <div class=\"kanban\" onDrop={(event) => this.onDrop(event, \"blocked\")} onDragOver={(event) => this.onDragOver(event)}>\n            <h2> + Blocked</h2>\n            <div onDrop={(event) => this.onDrop(event, \"blocked\")} onDragOver={(event) => this.onDragOver(event)}>{tasks.blocked}</div>\n          </div>\n          <div class=\"kanban\" onDrop={(event) => this.onDrop(event, \"completed\")} onDragOver={(event) => this.onDragOver(event)}>\n            <h2> + Completed</h2>\n            <div onDrop={(event) => this.onDrop(event, \"completed\")} onDragOver={(event) => this.onDragOver(event)}>{tasks.completed}</div>\n          </div>\n        </div>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}